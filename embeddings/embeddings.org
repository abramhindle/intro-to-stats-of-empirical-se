#+TITLE: Text Embeddings on Source Code
#+AUTHOR: Abram Hindle
#+OPTIONS: toc:t
#+PROPERTY: header-args:python :session te :results output :exports both

* Introduction
In this org-mode notebook, we will explore some textual embeddings. We
will parse all the .h files in /usr/include/linux and we'll find which
files are similar to each other using cosine distance. Then we'll
use *anomaly detection* using two popular unsupervised learning
techniques from scikit-learn:

- =IsolationForest= from ~sklearn.ensemble~
- =LocalOutlierFactor= from ~sklearn.neighbors~

To try to find with .h files are not like the others.

** What is Isolation Forest

Isolation Forest works by randomly selecting features and splitting
data points to create a binary tree. Anomalies, being few and
different, require fewer splits to isolate compared to normal
instances, resulting in shorter paths in the tree. This structure
helps identify outliers effectively in high-dimensional datasets.

** What is LocalOutlierFactor?

Local Outlier Factor (LOF) identifies anomalies by comparing the local
density of data points. It calculates the density of a point relative
to its neighbors. Points with significantly lower density compared to
their neighbors are deemed outliers, effectively detecting local
anomalies in the data distribution.

** When should we use Isolation Forest and when should we use LocalOutlierFactor?

Use Isolation Forest when dealing with high-dimensional data or when
you expect a large number of anomalies, as it performs well in such
scenarios. Opt for Local Outlier Factor when the data distribution has
varying densities, as it effectively detects anomalies in localized
regions.

** set up org-mode

#+BEGIN_SRC elisp
(org-babel-do-load-languages 'org-babel-load-languages '((python . t)))
(setq org-babel-python-command "python3")
#+END_SRC

#+RESULTS:
: python3

#+BEGIN_SRC python :results output
print("Hello, Org Babel!")
#+END_SRC

#+RESULTS:
: Python 3.10.12 (main, Aug 15 2025, 14:32:43) [GCC 11.4.0] on linux
: Type "help", "copyright", "credits" or "license" for more information.
: Hello, Org Babel!
: python.el: native completion setup loaded

* Textual Embeddings and Cosine Similarity
In this section, we will parse all the `.h` files in `/usr/include/linux`, compute their embeddings, and find similar files using cosine similarity.

** Load Required Libraries
We will use the following libraries:
- `os` and `numpy` for file handling and numerical computations
- `sklearn.metrics.pairwise` for computing cosine similarity
- `sklearn.ensemble` and `sklearn.neighbors` for anomaly detection algorithms

#+BEGIN_SRC python :results output
import os
import numpy as np
from sklearn.metrics.pairwise import cosine_similarity
from sklearn.feature_extraction.text import TfidfVectorizer

def load_h_files(directory):
    files = {}
    for filename in os.listdir(directory):
        if filename.endswith('.h'):
            with open(os.path.join(directory, filename), 'r') as file:
                files[filename] = file.read()
    return files

# Load .h files from /usr/include/linux
h_files = load_h_files('/usr/include/linux')
print(f"Loaded {len(h_files)} .h files.")
#+END_SRC

#+RESULTS:
: Loaded 537 .h files.
#+BEGIN_SRC python :results output
print(h_files.keys())
print(h_files['if_link.h'][0:100])
#+END_SRC

#+RESULTS:
: dict_keys(['qnx4_fs.h', 'if_pppox.h', 'pkt_cls.h', 'iso_fs.h', 'ivtvfb.h', 'if_link.h', 'scif_ioctl.h', 'kernel-page-flags.h', 'atm_nicstar.h', 'mempolicy.h', 'omap3isp.h', 'netfilter_ipv6.h', 'videodev2.h', 'dma-buf.h', 'stm.h', 'tcp_metrics.h', 'lirc.h', 'rose.h', 'if_tunnel.h', 'tipc_sockets_diag.h', 'binfmts.h', 'if_arcnet.h', 'xilinx-v4l2-controls.h', 'inotify.h', 'connector.h', 'bpfilter.h', 'net_namespace.h', 'virtio_vsock.h', 'fdreg.h', 'hdlcdrv.h', 'cec.h', 'landlock.h', 'dns_resolver.h', 'nubus.h', 'mpls.h', 'cycx_cfm.h', 'if_vlan.h', 'eventpoll.h', 'bpf_common.h', 'kernel.h', 'virtio_bt.h', 'pci.h', 'mmtimer.h', 'if_arp.h', 'udmabuf.h', 'capability.h', 'seccomp.h', 'netfilter_bridge.h', 'ppp_defs.h', 'errno.h', 'sock_diag.h', 'sockios.h', 'wireless.h', 'auto_dev-ioctl.h', 'ila.h', 'qemu_fw_cfg.h', 'ip6_tunnel.h', 'mount.h', 'phonet.h', 'fscrypt.h', 'nfs2.h', 'smc.h', 'fs.h', 'serial_reg.h', 'coff.h', 'limits.h', 'close_range.h', 'aufs_type.h', 'prctl.h', 'affs_hardblocks.h', 'memfd.h', 'i2c-dev.h', 'ipu-psys.h', 'mrp_bridge.h', 'rio_cm_cdev.h', 'poll.h', 'fou.h', 'ipmi_bmc.h', 'map_to_7segment.h', 'tls.h', 'nsfs.h', 'kvm_para.h', 'wwan.h', 'fpga-dfl.h', 'pps.h', 'wmi.h', 'rds.h', 'if_phonet.h', 'if_alg.h', 'uio.h', 'hsr_netlink.h', 'gfs2_ondisk.h', 'gsmmux.h', 'string.h', 'stat.h', 'atm.h', 'synclink.h', 'ip_vs.h', 'sed-opal.h', 'if_pppol2tp.h', 'timex.h', 'nvme_ioctl.h', 'bcm933xx_hcs.h', 'edd.h', 'remoteproc_cdev.h', 'ipu-isys.h', 'hdlc.h', 'cn_proc.h', 'param.h', 'kcm.h', 'mdio.h', 'ipc.h', 'acct.h', 'nfs4_mount.h', 'net_tstamp.h', 'unistd.h', 'fd.h', 'agpgart.h', 'if_fddi.h', 'ptrace.h', 'hiddev.h', 'seg6_hmac.h', 'suspend_ioctls.h', 'cxl_mem.h', 'fsverity.h', 'fcntl.h', 'ptp_clock.h', 'fadvise.h', 'gen_stats.h', 'fuse.h', 'i8k.h', 'hdreg.h', 'elf-em.h', 'vm_sockets_diag.h', 'unix_diag.h', 'cciss_ioctl.h', 'bpqether.h', 'netdevice.h', 'firewire-constants.h', 'netfilter_arp.h', 'virtio_console.h', 'net.h', 'if_ltalk.h', 'erspan.h', 'mptcp.h', 'perf_event.h', 'nfs_mount.h', 'firewire-cdev.h', 'snmp.h', 'ipv6.h', 'vfio.h', 'vtpm_proxy.h', 'rxrpc.h', 'nl80211.h', 'cryptouser.h', 'batadv_packet.h', 'dlm_plock.h', 'adb.h', 'if_infiniband.h', 'atmclip.h', 'rio_mport_cdev.h', 'loop.h', 'virtio_pci.h', 'virtio_types.h', 'tiocl.h', 'x25.h', 'uvcvideo.h', 'shm.h', 'soundcard.h', 'kcmp.h', 'sound.h', 'errqueue.h', 'virtio_pcidev.h', 'nexthop.h', 'virtio_net.h', 'rpmsg.h', 'uuid.h', 'resource.h', 'if_slip.h', 'seg6.h', 'bsg.h', 'ipmi.h', 'kernelcapi.h', 'kexec.h', 'irqnr.h', 'v4l2-common.h', 'v4l2-mediabus.h', 'pg.h', 'virtio_9p.h', 'aspeed-lpc-ctrl.h', 'io_uring.h', 'dma-heap.h', 'phantom.h', 'input-event-codes.h', 'if.h', 'ioam6_iptunnel.h', 'vt.h', 'dlm_device.h', 'pr.h', 'if_ppp.h', 'scc.h', 'f2fs.h', 'virtio_rng.h', 'virtio_mem.h', 'bfs_fs.h', 'membarrier.h', 'lp.h', 'atalk.h', 'userfaultfd.h', 'omapfb.h', 'coresight-stm.h', 'dqblk_xfs.h', 'if_x25.h', 'virtio_fs.h', 'udp.h', 'zorro.h', 'fsl_hypervisor.h', 'screen_info.h', 'acrn.h', 'ppp-ioctl.h', 'fanotify.h', 'userio.h', 'virtio_crypto.h', 'if_fc.h', 'virtio_config.h', 'rkisp1-config.h', 'posix_acl_xattr.h', 'atmlec.h', 'can.h', 'blkzoned.h', 'cciss_defs.h', 'virtio_mmio.h', 'termios.h', 'psp-sev.h', 'romfs_fs.h', 'matroxfb.h', 'types.h', 'virtio_iommu.h', 'mtio.h', 'i2o-dev.h', 'rpl_iptunnel.h', 'ip.h', 'hpet.h', 'dccp.h', 'virtio_gpio.h', 'hash_info.h', 'route.h', 'if_addr.h', 'fib_rules.h', 'posix_acl.h', 'baycom.h', 'atm_tcp.h', 'reiserfs_fs.h', 'virtio_snd.h', 'bt-bmc.h', 'if_ether.h', 'hyperv.h', 'btrfs_tree.h', 'toshiba.h', 'dlm.h', 'l2tp.h', 'igmp.h', 'major.h', 'cgroupstats.h', 'usbip.h', 'cramfs_fs.h', 'module.h', 'futex.h', 'rtnetlink.h', 'vhost.h', 'cm4000_cs.h', 'ccs.h', 'openat2.h', 'ioam6.h', 'sonypi.h', 'oom.h', 'virtio_gpu.h', 'serial.h', 'tcp.h', 'if_eql.h', 'ipmi_msgdefs.h', 'nbd-netlink.h', 'ndctl.h', 'tty_flags.h', 'iommu.h', 'btrfs.h', 'i2c.h', 'ipv6_route.h', 'rpl.h', 'wait.h', 'nbd.h', 'vbox_err.h', 'atmmpc.h', 'nfs_idmap.h', 'btf.h', 'random.h', 'thermal.h', 'openvswitch.h', 'audit.h', 'netfilter.h', 'v4l2-subdev.h', 'arm_sdei.h', 'nilfs2_api.h', 'pkt_sched.h', 'auto_fs4.h', 'media-bus-format.h', 'mpls_iptunnel.h', 'rfkill.h', 'llc.h', 'netlink.h', 'seg6_local.h', 'virtio_scmi.h', 'atm_eni.h', 'parport.h', 'taskstats.h', 'gameport.h', 'cyclades.h', 'v4l2-controls.h', 'signal.h', 'isst_if.h', 'ioam6_genl.h', 'pidfd.h', 'vdpa.h', 'switchtec_ioctl.h', 'max2175.h', 'atmarp.h', 'apm_bios.h', 'smc_diag.h', 'atmapi.h', 'falloc.h', 'selinux_netlink.h', 'xdp_diag.h', 'nfc.h', 'pcitest.h', 'virtio_ring.h', 'um_timetravel.h', 'qnxtypes.h', 'nvram.h', 'xattr.h', 'vduse.h', 'sysctl.h', 'pci_regs.h', 'qrtr.h', 'icmpv6.h', 'personality.h', 'smiapp.h', 'genetlink.h', 'pktcdvd.h', 'v4l2-dv-timings.h', 'reiserfs_xattr.h', 'zorro_ids.h', 'xfrm.h', 'atmdev.h', 'efs_fs_sb.h', 'utime.h', 'icmp.h', 'gpio.h', 'net_dropmon.h', 'ultrasound.h', 'if_xdp.h', 'elf-fdpic.h', 'a.out.h', 'target_core_user.h', 'rtc.h', 'sysinfo.h', 'in.h', 'in_route.h', 'if_macsec.h', 'seg6_iptunnel.h', 'usbdevice_fs.h', 'ncsi.h', 'hidraw.h', 'lwtunnel.h', 'nfs3.h', 'cdrom.h', 'nfs.h', 'mman.h', 'vm_sockets.h', 'veth.h', 'virtio_ids.h', 'fsl_mc.h', 'vboxguest.h', 'mei.h', 'wireguard.h', 'nl80211-vnd-intel.h', 'uhid.h', 'dcbnl.h', 'virtio_balloon.h', 'fiemap.h', 'chio.h', 'netfilter_ipv4.h', 'blkpg.h', 'pfkeyv2.h', 'mqueue.h', 'sem.h', 'nilfs2_ondisk.h', 'vfio_ccw.h', 'watch_queue.h', 'auxvec.h', 'psample.h', 'devlink.h', 'virtio_scsi.h', 'bpf.h', 'atmsvc.h', 'if_cablemodem.h', 'if_addrlabel.h', 'virtio_pmem.h', 'vfio_zdev.h', 'utsname.h', 'capi.h', 'serial_core.h', 'cec-funcs.h', 'input.h', 'tty.h', 'sonet.h', 'tee.h', 'vmcore.h', 'uleds.h', 'batman_adv.h', 'virtio_input.h', 'dlmconstants.h', 'mctp.h', 'signalfd.h', 'arcfb.h', 'netrom.h', 'keyboard.h', 'netlink_diag.h', 'ethtool.h', 'vhost_types.h', 'uinput.h', 'serio.h', 'ioprio.h', 'packet_diag.h', 'cuda.h', 'seg6_genl.h', 'swab.h', 'ipsec.h', 'timerfd.h', 'neighbour.h', 'watchdog.h', 'atmbr2684.h', 'time.h', 'ax25.h', 'bcache.h', 'radeonfb.h', 'vsockmon.h', 'udf_fs_i.h', 'sched.h', 'jffs2.h', 'fb.h', 'dlm_netlink.h', 'rpmsg_types.h', 'am437x-vpfe.h', 'sync_file.h', 'if_bridge.h', 'securebits.h', 'elf.h', 'kcov.h', 'tipc_config.h', 'media.h', 'ivtv.h', 'patchkey.h', 'atmsap.h', 'tipc_netlink.h', 'version.h', 'bpf_perf_event.h', 'ioctl.h', 'atmppp.h', 'joystick.h', 'msdos_fs.h', 'idxd.h', 'sctp.h', 'keyctl.h', 'tipc.h', 'rseq.h', 'virtio_blk.h', 'aspeed-p2a-ctrl.h', 'nitro_enclaves.h', 'stddef.h', 'if_plip.h', 'ethtool_netlink.h', 'if_packet.h', 'pmu.h', 'minix_fs.h', 'fsi.h', 'virtio_i2c.h', 'kd.h', 'time_types.h', 'auto_fs.h', 'inet_diag.h', 'dm-ioctl.h', 'quota.h', 'socket.h', 'psci.h', 'blktrace_api.h', 'gtp.h', 'posix_types.h', 'atm_zatm.h', 'netconf.h', 'atmioc.h', 'atm_idt77105.h', 'if_hippi.h', 'cfm_bridge.h', 'kdev_t.h', 'in6.h', 'times.h', 'const.h', 'msg.h', 'if_bonding.h', 'nfs_fs.h', 'kfd_ioctl.h', 'ppp-comp.h', 'coda.h', 'if_team.h', 'kvm.h', 'reboot.h', 'adfs_fs.h', 'hid.h', 'hw_breakpoint.h', 'dm-log-userspace.h', 'vbox_vmmdev_types.h', 'aio_abi.h', 'mii.h', 'filter.h', 'libc-compat.h', 'nfsacl.h', 'mroute6.h', 'fsmap.h', 'un.h', 'ife.h', 'magic.h', 'mroute.h', 'ppdev.h', 'if_tun.h', 'atm_he.h', 'nfs4.h', 'meye.h'])
: /* SPDX-License-Identifier: GPL-2.0 WITH Linux-syscall-note */
: #ifndef _LINUX_IF_LINK_H
: #define _LIN


** Compute Embeddings
We'll convert the text to embeddings using TF-IDF and calculate cosine similarity between the files.

#+BEGIN_SRC python :session te :results output
# Compute TF-IDF embeddings
vectorizer = TfidfVectorizer()
tfidf_matrix = vectorizer.fit_transform(h_files.values())
print(tfidf_matrix.shape)
# Compute cosine similarity
cosine_sim = cosine_similarity(tfidf_matrix)
print("Cosine similarity computed.")
#+END_SRC

#+RESULTS:
: (537, 59691)
: Cosine similarity computed.

** Identify Similar Files
Now we can find similar files based on the cosine similarity results.

#+BEGIN_SRC python :results output
def find_similar_files(cosine_sim, filenames, threshold=0.5):
    similar_files = {}
    my_files = np.array(filenames)
    for i, filename in enumerate(filenames):
        similar_files[filename] = list(my_files[cosine_sim[i] >= threshold])
    return similar_files

similarity_threshold = 0.5  # threshold for similarity
similar_files = find_similar_files(cosine_sim, list(h_files.keys()), similarity_threshold)
print(f"Found similar files above the threshold of {similarity_threshold}.")
print(similar_files)
#+END_SRC

#+RESULTS:
: Found similar files above the threshold of 0.5.
: {'qnx4_fs.h': ['qnx4_fs.h'], 'if_pppox.h': ['if_pppox.h'], 'pkt_cls.h': ['pkt_cls.h'], 'iso_fs.h': ['iso_fs.h'], 'ivtvfb.h': ['ivtvfb.h'], 'if_link.h': ['if_link.h'], 'scif_ioctl.h': ['scif_ioctl.h'], 'kernel-page-flags.h': ['kernel-page-flags.h'], 'atm_nicstar.h': ['atm_nicstar.h'], 'mempolicy.h': ['mempolicy.h'], 'omap3isp.h': ['omap3isp.h'], 'netfilter_ipv6.h': ['netfilter_ipv6.h'], 'videodev2.h': ['videodev2.h'], 'dma-buf.h': ['dma-buf.h'], 'stm.h': ['stm.h'], 'tcp_metrics.h': ['tcp_metrics.h'], 'lirc.h': ['lirc.h'], 'rose.h': ['rose.h', 'netrom.h', 'ax25.h'], 'if_tunnel.h': ['if_tunnel.h'], 'tipc_sockets_diag.h': ['tipc_sockets_diag.h'], 'binfmts.h': ['binfmts.h'], 'if_arcnet.h': ['if_arcnet.h'], 'xilinx-v4l2-controls.h': ['xilinx-v4l2-controls.h'], 'inotify.h': ['inotify.h'], 'connector.h': ['connector.h'], 'bpfilter.h': ['bpfilter.h'], 'net_namespace.h': ['net_namespace.h'], 'virtio_vsock.h': ['virtio_vsock.h', 'virtio_console.h', 'virtio_types.h', 'virtio_9p.h', 'virtio_input.h'], 'fdreg.h': ['fdreg.h'], 'hdlcdrv.h': ['hdlcdrv.h'], 'cec.h': ['cec.h', 'input-event-codes.h', 'vbox_err.h', 'pci_regs.h'], 'landlock.h': ['landlock.h'], 'dns_resolver.h': ['dns_resolver.h'], 'nubus.h': ['nubus.h'], 'mpls.h': ['mpls.h'], 'cycx_cfm.h': ['cycx_cfm.h'], 'if_vlan.h': ['if_vlan.h'], 'eventpoll.h': ['eventpoll.h'], 'bpf_common.h': ['bpf_common.h'], 'kernel.h': ['kernel.h'], 'virtio_bt.h': ['virtio_bt.h'], 'pci.h': ['pci.h'], 'mmtimer.h': ['mmtimer.h'], 'if_arp.h': ['if_arp.h'], 'udmabuf.h': ['udmabuf.h'], 'capability.h': ['capability.h'], 'seccomp.h': ['seccomp.h'], 'netfilter_bridge.h': ['netfilter_bridge.h'], 'ppp_defs.h': ['ppp_defs.h'], 'errno.h': ['errno.h'], 'sock_diag.h': ['sock_diag.h'], 'sockios.h': ['sockios.h'], 'wireless.h': ['wireless.h'], 'auto_dev-ioctl.h': ['auto_dev-ioctl.h'], 'ila.h': ['ila.h'], 'qemu_fw_cfg.h': ['qemu_fw_cfg.h'], 'ip6_tunnel.h': ['ip6_tunnel.h'], 'mount.h': ['mount.h'], 'phonet.h': ['phonet.h'], 'fscrypt.h': ['fscrypt.h'], 'nfs2.h': ['nfs2.h'], 'smc.h': ['smc.h'], 'fs.h': ['fs.h'], 'serial_reg.h': ['serial_reg.h', 'pci_regs.h'], 'coff.h': ['coff.h'], 'limits.h': ['limits.h'], 'close_range.h': ['close_range.h'], 'aufs_type.h': ['aufs_type.h'], 'prctl.h': ['prctl.h', 'input-event-codes.h'], 'affs_hardblocks.h': ['affs_hardblocks.h'], 'memfd.h': ['memfd.h', 'mman.h'], 'i2c-dev.h': ['i2c-dev.h'], 'ipu-psys.h': ['ipu-psys.h', 'fuse.h', 'idxd.h'], 'mrp_bridge.h': ['mrp_bridge.h'], 'rio_cm_cdev.h': ['rio_cm_cdev.h'], 'poll.h': ['poll.h'], 'fou.h': ['fou.h'], 'ipmi_bmc.h': ['ipmi_bmc.h'], 'map_to_7segment.h': ['map_to_7segment.h'], 'tls.h': ['tls.h'], 'nsfs.h': ['nsfs.h'], 'kvm_para.h': ['kvm_para.h'], 'wwan.h': ['wwan.h'], 'fpga-dfl.h': ['fpga-dfl.h'], 'pps.h': ['pps.h'], 'wmi.h': ['wmi.h'], 'rds.h': ['rds.h'], 'if_phonet.h': ['if_phonet.h'], 'if_alg.h': ['if_alg.h'], 'uio.h': ['uio.h'], 'hsr_netlink.h': ['hsr_netlink.h'], 'gfs2_ondisk.h': ['gfs2_ondisk.h'], 'gsmmux.h': ['gsmmux.h'], 'string.h': ['string.h'], 'stat.h': ['stat.h'], 'atm.h': ['atm.h'], 'synclink.h': ['synclink.h', 'input-event-codes.h', 'major.h', 'vbox_err.h', 'pci_regs.h', 'nfs4.h'], 'ip_vs.h': ['ip_vs.h'], 'sed-opal.h': ['sed-opal.h'], 'if_pppol2tp.h': ['if_pppol2tp.h'], 'timex.h': ['timex.h'], 'nvme_ioctl.h': ['nvme_ioctl.h'], 'bcm933xx_hcs.h': ['bcm933xx_hcs.h'], 'edd.h': ['edd.h'], 'remoteproc_cdev.h': ['remoteproc_cdev.h'], 'ipu-isys.h': ['ipu-isys.h'], 'hdlc.h': ['hdlc.h'], 'cn_proc.h': ['cn_proc.h'], 'param.h': ['param.h'], 'kcm.h': ['kcm.h'], 'mdio.h': ['mdio.h'], 'ipc.h': ['ipc.h'], 'acct.h': ['acct.h'], 'nfs4_mount.h': ['nfs4_mount.h', 'nfs_mount.h'], 'net_tstamp.h': ['net_tstamp.h'], 'unistd.h': ['unistd.h'], 'fd.h': ['fd.h'], 'agpgart.h': ['agpgart.h'], 'if_fddi.h': ['if_fddi.h'], 'ptrace.h': ['ptrace.h'], 'hiddev.h': ['hiddev.h'], 'seg6_hmac.h': ['seg6_hmac.h'], 'suspend_ioctls.h': ['suspend_ioctls.h'], 'cxl_mem.h': ['cxl_mem.h'], 'fsverity.h': ['fsverity.h'], 'fcntl.h': ['fcntl.h'], 'ptp_clock.h': ['ptp_clock.h'], 'fadvise.h': ['fadvise.h'], 'gen_stats.h': ['gen_stats.h'], 'fuse.h': ['ipu-psys.h', 'fuse.h', 'idxd.h'], 'i8k.h': ['i8k.h'], 'hdreg.h': ['hdreg.h'], 'elf-em.h': ['elf-em.h'], 'vm_sockets_diag.h': ['vm_sockets_diag.h'], 'unix_diag.h': ['unix_diag.h'], 'cciss_ioctl.h': ['cciss_ioctl.h'], 'bpqether.h': ['bpqether.h'], 'netdevice.h': ['netdevice.h'], 'firewire-constants.h': ['firewire-constants.h'], 'netfilter_arp.h': ['netfilter_arp.h'], 'virtio_console.h': ['virtio_vsock.h', 'virtio_console.h', 'virtio_types.h', 'virtio_9p.h', 'virtio_config.h', 'nfs_idmap.h', 'virtio_input.h'], 'net.h': ['net.h'], 'if_ltalk.h': ['if_ltalk.h'], 'erspan.h': ['erspan.h'], 'mptcp.h': ['mptcp.h'], 'perf_event.h': ['perf_event.h'], 'nfs_mount.h': ['nfs4_mount.h', 'nfs_mount.h'], 'firewire-cdev.h': ['firewire-cdev.h', 'bpf.h'], 'snmp.h': ['snmp.h'], 'ipv6.h': ['ipv6.h'], 'vfio.h': ['vfio.h'], 'vtpm_proxy.h': ['vtpm_proxy.h'], 'rxrpc.h': ['rxrpc.h'], 'nl80211.h': ['nl80211.h', 'bpf.h'], 'cryptouser.h': ['cryptouser.h'], 'batadv_packet.h': ['batadv_packet.h'], 'dlm_plock.h': ['dlm_plock.h'], 'adb.h': ['adb.h'], 'if_infiniband.h': ['if_infiniband.h'], 'atmclip.h': ['atmclip.h'], 'rio_mport_cdev.h': ['rio_mport_cdev.h'], 'loop.h': ['loop.h'], 'virtio_pci.h': ['virtio_pci.h', 'virtio_mmio.h'], 'virtio_types.h': ['virtio_vsock.h', 'virtio_console.h', 'virtio_types.h', 'virtio_9p.h', 'virtio_config.h', 'nfs_idmap.h', 'virtio_input.h'], 'tiocl.h': ['tiocl.h'], 'x25.h': ['x25.h'], 'uvcvideo.h': ['uvcvideo.h'], 'shm.h': ['shm.h'], 'soundcard.h': ['soundcard.h'], 'kcmp.h': ['kcmp.h'], 'sound.h': ['sound.h'], 'errqueue.h': ['errqueue.h'], 'virtio_pcidev.h': ['virtio_pcidev.h'], 'nexthop.h': ['nexthop.h'], 'virtio_net.h': ['virtio_net.h'], 'rpmsg.h': ['rpmsg.h'], 'uuid.h': ['uuid.h'], 'resource.h': ['resource.h'], 'if_slip.h': ['if_slip.h'], 'seg6.h': ['seg6.h'], 'bsg.h': ['bsg.h'], 'ipmi.h': ['ipmi.h'], 'kernelcapi.h': ['kernelcapi.h'], 'kexec.h': ['kexec.h'], 'irqnr.h': ['irqnr.h'], 'v4l2-common.h': ['v4l2-common.h', 'virtio_9p.h'], 'v4l2-mediabus.h': ['v4l2-mediabus.h'], 'pg.h': ['pg.h'], 'virtio_9p.h': ['virtio_vsock.h', 'virtio_console.h', 'virtio_types.h', 'v4l2-common.h', 'virtio_9p.h', 'virtio_config.h', 'nfs_idmap.h', 'virtio_input.h'], 'aspeed-lpc-ctrl.h': ['aspeed-lpc-ctrl.h'], 'io_uring.h': ['io_uring.h'], 'dma-heap.h': ['dma-heap.h'], 'phantom.h': ['phantom.h'], 'input-event-codes.h': ['cec.h', 'prctl.h', 'synclink.h', 'input-event-codes.h', 'major.h', 'sonypi.h', 'ipmi_msgdefs.h', 'vbox_err.h', 'audit.h', 'media-bus-format.h', 'switchtec_ioctl.h', 'apm_bios.h', 'pci_regs.h', 'nfs3.h', 'serio.h', 'in6.h', 'magic.h', 'nfs4.h'], 'if.h': ['if.h'], 'ioam6_iptunnel.h': ['ioam6_iptunnel.h'], 'vt.h': ['vt.h'], 'dlm_device.h': ['dlm_device.h'], 'pr.h': ['pr.h'], 'if_ppp.h': ['if_ppp.h'], 'scc.h': ['scc.h'], 'f2fs.h': ['f2fs.h'], 'virtio_rng.h': ['virtio_rng.h'], 'virtio_mem.h': ['virtio_mem.h'], 'bfs_fs.h': ['bfs_fs.h'], 'membarrier.h': ['membarrier.h'], 'lp.h': ['lp.h'], 'atalk.h': ['atalk.h'], 'userfaultfd.h': ['userfaultfd.h'], 'omapfb.h': ['omapfb.h'], 'coresight-stm.h': ['coresight-stm.h'], 'dqblk_xfs.h': ['dqblk_xfs.h'], 'if_x25.h': ['if_x25.h'], 'virtio_fs.h': ['virtio_fs.h'], 'udp.h': ['udp.h'], 'zorro.h': ['zorro.h'], 'fsl_hypervisor.h': ['fsl_hypervisor.h'], 'screen_info.h': ['screen_info.h'], 'acrn.h': ['acrn.h'], 'ppp-ioctl.h': ['ppp-ioctl.h'], 'fanotify.h': ['fanotify.h'], 'userio.h': ['userio.h'], 'virtio_crypto.h': ['virtio_crypto.h', 'virtio_gpu.h'], 'if_fc.h': ['if_fc.h'], 'virtio_config.h': ['virtio_console.h', 'virtio_types.h', 'virtio_9p.h', 'virtio_config.h', 'nfs_idmap.h'], 'rkisp1-config.h': ['rkisp1-config.h'], 'posix_acl_xattr.h': ['posix_acl_xattr.h'], 'atmlec.h': ['atmlec.h'], 'can.h': ['can.h'], 'blkzoned.h': ['blkzoned.h'], 'cciss_defs.h': ['cciss_defs.h'], 'virtio_mmio.h': ['virtio_pci.h', 'virtio_mmio.h'], 'termios.h': ['termios.h'], 'psp-sev.h': ['psp-sev.h'], 'romfs_fs.h': ['romfs_fs.h'], 'matroxfb.h': ['matroxfb.h'], 'types.h': ['types.h'], 'virtio_iommu.h': ['virtio_iommu.h'], 'mtio.h': ['mtio.h'], 'i2o-dev.h': ['i2o-dev.h'], 'rpl_iptunnel.h': ['rpl_iptunnel.h'], 'ip.h': ['ip.h'], 'hpet.h': ['hpet.h'], 'dccp.h': ['dccp.h'], 'virtio_gpio.h': ['virtio_gpio.h'], 'hash_info.h': ['hash_info.h'], 'route.h': ['route.h'], 'if_addr.h': ['if_addr.h'], 'fib_rules.h': ['fib_rules.h'], 'posix_acl.h': ['posix_acl.h'], 'baycom.h': ['baycom.h'], 'atm_tcp.h': ['atm_tcp.h'], 'reiserfs_fs.h': ['reiserfs_fs.h'], 'virtio_snd.h': ['virtio_snd.h'], 'bt-bmc.h': ['bt-bmc.h'], 'if_ether.h': ['if_ether.h'], 'hyperv.h': ['hyperv.h'], 'btrfs_tree.h': ['btrfs_tree.h'], 'toshiba.h': ['toshiba.h'], 'dlm.h': ['dlm.h', 'dlmconstants.h'], 'l2tp.h': ['l2tp.h'], 'igmp.h': ['igmp.h'], 'major.h': ['synclink.h', 'input-event-codes.h', 'major.h', 'sonypi.h', 'vbox_err.h', 'audit.h', 'media-bus-format.h', 'pci_regs.h', 'nfs3.h', 'serio.h', 'in6.h', 'nfs4.h'], 'cgroupstats.h': ['cgroupstats.h'], 'usbip.h': ['usbip.h'], 'cramfs_fs.h': ['cramfs_fs.h'], 'module.h': ['module.h'], 'futex.h': ['futex.h'], 'rtnetlink.h': ['rtnetlink.h'], 'vhost.h': ['vhost.h'], 'cm4000_cs.h': ['cm4000_cs.h'], 'ccs.h': ['ccs.h'], 'openat2.h': ['openat2.h'], 'ioam6.h': ['ioam6.h'], 'sonypi.h': ['input-event-codes.h', 'major.h', 'sonypi.h', 'vbox_err.h', 'pci_regs.h'], 'oom.h': ['oom.h'], 'virtio_gpu.h': ['virtio_crypto.h', 'virtio_gpu.h'], 'serial.h': ['serial.h'], 'tcp.h': ['tcp.h'], 'if_eql.h': ['if_eql.h'], 'ipmi_msgdefs.h': ['input-event-codes.h', 'ipmi_msgdefs.h'], 'nbd-netlink.h': ['nbd-netlink.h'], 'ndctl.h': ['ndctl.h'], 'tty_flags.h': ['tty_flags.h'], 'iommu.h': ['iommu.h'], 'btrfs.h': ['btrfs.h'], 'i2c.h': ['i2c.h'], 'ipv6_route.h': ['ipv6_route.h'], 'rpl.h': ['rpl.h'], 'wait.h': ['wait.h'], 'nbd.h': ['nbd.h'], 'vbox_err.h': ['cec.h', 'synclink.h', 'input-event-codes.h', 'major.h', 'sonypi.h', 'vbox_err.h', 'audit.h', 'media-bus-format.h', 'switchtec_ioctl.h', 'pci_regs.h', 'nfs3.h', 'serio.h', 'in6.h', 'magic.h', 'nfs4.h'], 'atmmpc.h': ['atmmpc.h'], 'nfs_idmap.h': ['virtio_console.h', 'virtio_types.h', 'virtio_9p.h', 'virtio_config.h', 'nfs_idmap.h', 'virtio_input.h'], 'btf.h': ['btf.h'], 'random.h': ['random.h'], 'thermal.h': ['thermal.h'], 'openvswitch.h': ['openvswitch.h'], 'audit.h': ['input-event-codes.h', 'major.h', 'vbox_err.h', 'audit.h', 'pci_regs.h'], 'netfilter.h': ['netfilter.h'], 'v4l2-subdev.h': ['v4l2-subdev.h'], 'arm_sdei.h': ['arm_sdei.h'], 'nilfs2_api.h': ['nilfs2_api.h'], 'pkt_sched.h': ['pkt_sched.h'], 'auto_fs4.h': ['auto_fs4.h'], 'media-bus-format.h': ['input-event-codes.h', 'major.h', 'vbox_err.h', 'media-bus-format.h', 'pci_regs.h'], 'mpls_iptunnel.h': ['mpls_iptunnel.h'], 'rfkill.h': ['rfkill.h'], 'llc.h': ['llc.h'], 'netlink.h': ['netlink.h'], 'seg6_local.h': ['seg6_local.h'], 'virtio_scmi.h': ['virtio_scmi.h'], 'atm_eni.h': ['atm_eni.h'], 'parport.h': ['parport.h'], 'taskstats.h': ['taskstats.h'], 'gameport.h': ['gameport.h'], 'cyclades.h': ['cyclades.h'], 'v4l2-controls.h': ['v4l2-controls.h'], 'signal.h': ['signal.h'], 'isst_if.h': ['isst_if.h'], 'ioam6_genl.h': ['ioam6_genl.h'], 'pidfd.h': ['pidfd.h'], 'vdpa.h': ['vdpa.h'], 'switchtec_ioctl.h': ['input-event-codes.h', 'vbox_err.h', 'switchtec_ioctl.h'], 'max2175.h': ['max2175.h'], 'atmarp.h': ['atmarp.h'], 'apm_bios.h': ['input-event-codes.h', 'apm_bios.h', 'pci_regs.h'], 'smc_diag.h': ['smc_diag.h'], 'atmapi.h': ['atmapi.h'], 'falloc.h': ['falloc.h'], 'selinux_netlink.h': ['selinux_netlink.h'], 'xdp_diag.h': ['xdp_diag.h'], 'nfc.h': ['nfc.h'], 'pcitest.h': ['pcitest.h'], 'virtio_ring.h': ['virtio_ring.h'], 'um_timetravel.h': ['um_timetravel.h'], 'qnxtypes.h': ['qnxtypes.h'], 'nvram.h': ['nvram.h'], 'xattr.h': ['xattr.h'], 'vduse.h': ['vduse.h'], 'sysctl.h': ['sysctl.h'], 'pci_regs.h': ['cec.h', 'serial_reg.h', 'synclink.h', 'input-event-codes.h', 'major.h', 'sonypi.h', 'vbox_err.h', 'audit.h', 'media-bus-format.h', 'apm_bios.h', 'pci_regs.h', 'nfs3.h', 'serio.h', 'nfs4.h'], 'qrtr.h': ['qrtr.h'], 'icmpv6.h': ['icmpv6.h'], 'personality.h': ['personality.h'], 'smiapp.h': ['smiapp.h'], 'genetlink.h': ['genetlink.h'], 'pktcdvd.h': ['pktcdvd.h'], 'v4l2-dv-timings.h': ['v4l2-dv-timings.h'], 'reiserfs_xattr.h': ['reiserfs_xattr.h'], 'zorro_ids.h': ['zorro_ids.h'], 'xfrm.h': ['xfrm.h'], 'atmdev.h': ['atmdev.h'], 'efs_fs_sb.h': ['efs_fs_sb.h'], 'utime.h': ['utime.h'], 'icmp.h': ['icmp.h'], 'gpio.h': ['gpio.h'], 'net_dropmon.h': ['net_dropmon.h'], 'ultrasound.h': ['ultrasound.h'], 'if_xdp.h': ['if_xdp.h'], 'elf-fdpic.h': ['elf-fdpic.h'], 'a.out.h': ['a.out.h'], 'target_core_user.h': ['target_core_user.h'], 'rtc.h': ['rtc.h'], 'sysinfo.h': ['sysinfo.h'], 'in.h': ['in.h'], 'in_route.h': ['in_route.h'], 'if_macsec.h': ['if_macsec.h'], 'seg6_iptunnel.h': ['seg6_iptunnel.h'], 'usbdevice_fs.h': ['usbdevice_fs.h'], 'ncsi.h': ['ncsi.h'], 'hidraw.h': ['hidraw.h'], 'lwtunnel.h': ['lwtunnel.h'], 'nfs3.h': ['input-event-codes.h', 'major.h', 'vbox_err.h', 'pci_regs.h', 'nfs3.h'], 'cdrom.h': ['cdrom.h'], 'nfs.h': ['nfs.h'], 'mman.h': ['memfd.h', 'mman.h'], 'vm_sockets.h': ['vm_sockets.h'], 'veth.h': ['veth.h'], 'virtio_ids.h': ['virtio_ids.h'], 'fsl_mc.h': ['fsl_mc.h'], 'vboxguest.h': ['vboxguest.h'], 'mei.h': ['mei.h'], 'wireguard.h': ['wireguard.h'], 'nl80211-vnd-intel.h': ['nl80211-vnd-intel.h'], 'uhid.h': ['uhid.h'], 'dcbnl.h': ['dcbnl.h'], 'virtio_balloon.h': ['virtio_balloon.h'], 'fiemap.h': ['fiemap.h'], 'chio.h': ['chio.h'], 'netfilter_ipv4.h': ['netfilter_ipv4.h'], 'blkpg.h': ['blkpg.h'], 'pfkeyv2.h': ['pfkeyv2.h'], 'mqueue.h': ['mqueue.h'], 'sem.h': ['sem.h'], 'nilfs2_ondisk.h': ['nilfs2_ondisk.h'], 'vfio_ccw.h': ['vfio_ccw.h'], 'watch_queue.h': ['watch_queue.h'], 'auxvec.h': ['auxvec.h'], 'psample.h': ['psample.h'], 'devlink.h': ['devlink.h'], 'virtio_scsi.h': ['virtio_scsi.h'], 'bpf.h': ['firewire-cdev.h', 'nl80211.h', 'bpf.h'], 'atmsvc.h': ['atmsvc.h'], 'if_cablemodem.h': ['if_cablemodem.h'], 'if_addrlabel.h': ['if_addrlabel.h'], 'virtio_pmem.h': ['virtio_pmem.h'], 'vfio_zdev.h': ['vfio_zdev.h'], 'utsname.h': ['utsname.h'], 'capi.h': ['capi.h'], 'serial_core.h': ['serial_core.h'], 'cec-funcs.h': ['cec-funcs.h'], 'input.h': ['input.h'], 'tty.h': ['tty.h'], 'sonet.h': ['sonet.h'], 'tee.h': ['tee.h'], 'vmcore.h': ['vmcore.h'], 'uleds.h': ['uleds.h'], 'batman_adv.h': ['batman_adv.h'], 'virtio_input.h': ['virtio_vsock.h', 'virtio_console.h', 'virtio_types.h', 'virtio_9p.h', 'nfs_idmap.h', 'virtio_input.h'], 'dlmconstants.h': ['dlm.h', 'dlmconstants.h'], 'mctp.h': ['mctp.h'], 'signalfd.h': ['signalfd.h'], 'arcfb.h': ['arcfb.h'], 'netrom.h': ['rose.h', 'netrom.h', 'ax25.h'], 'keyboard.h': ['keyboard.h'], 'netlink_diag.h': ['netlink_diag.h'], 'ethtool.h': ['ethtool.h'], 'vhost_types.h': ['vhost_types.h'], 'uinput.h': ['uinput.h'], 'serio.h': ['input-event-codes.h', 'major.h', 'vbox_err.h', 'pci_regs.h', 'serio.h'], 'ioprio.h': ['ioprio.h'], 'packet_diag.h': ['packet_diag.h'], 'cuda.h': ['cuda.h'], 'seg6_genl.h': ['seg6_genl.h'], 'swab.h': ['swab.h'], 'ipsec.h': ['ipsec.h'], 'timerfd.h': ['timerfd.h'], 'neighbour.h': ['neighbour.h'], 'watchdog.h': ['watchdog.h'], 'atmbr2684.h': ['atmbr2684.h'], 'time.h': ['time.h'], 'ax25.h': ['rose.h', 'netrom.h', 'ax25.h'], 'bcache.h': ['bcache.h'], 'radeonfb.h': ['radeonfb.h'], 'vsockmon.h': ['vsockmon.h'], 'udf_fs_i.h': ['udf_fs_i.h'], 'sched.h': ['sched.h'], 'jffs2.h': ['jffs2.h'], 'fb.h': ['fb.h'], 'dlm_netlink.h': ['dlm_netlink.h'], 'rpmsg_types.h': ['rpmsg_types.h'], 'am437x-vpfe.h': ['am437x-vpfe.h'], 'sync_file.h': ['sync_file.h'], 'if_bridge.h': ['if_bridge.h'], 'securebits.h': ['securebits.h'], 'elf.h': ['elf.h'], 'kcov.h': ['kcov.h'], 'tipc_config.h': ['tipc_config.h'], 'media.h': ['media.h'], 'ivtv.h': ['ivtv.h'], 'patchkey.h': ['patchkey.h'], 'atmsap.h': ['atmsap.h'], 'tipc_netlink.h': ['tipc_netlink.h', 'ethtool_netlink.h'], 'version.h': ['version.h'], 'bpf_perf_event.h': ['bpf_perf_event.h'], 'ioctl.h': ['ioctl.h'], 'atmppp.h': ['atmppp.h'], 'joystick.h': ['joystick.h'], 'msdos_fs.h': ['msdos_fs.h'], 'idxd.h': ['ipu-psys.h', 'fuse.h', 'idxd.h'], 'sctp.h': ['sctp.h'], 'keyctl.h': ['keyctl.h'], 'tipc.h': ['tipc.h'], 'rseq.h': ['rseq.h'], 'virtio_blk.h': ['virtio_blk.h'], 'aspeed-p2a-ctrl.h': ['aspeed-p2a-ctrl.h'], 'nitro_enclaves.h': ['nitro_enclaves.h'], 'stddef.h': ['stddef.h'], 'if_plip.h': ['if_plip.h'], 'ethtool_netlink.h': ['tipc_netlink.h', 'ethtool_netlink.h'], 'if_packet.h': ['if_packet.h'], 'pmu.h': ['pmu.h'], 'minix_fs.h': ['minix_fs.h'], 'fsi.h': ['fsi.h'], 'virtio_i2c.h': ['virtio_i2c.h'], 'kd.h': ['kd.h'], 'time_types.h': ['time_types.h'], 'auto_fs.h': ['auto_fs.h'], 'inet_diag.h': ['inet_diag.h'], 'dm-ioctl.h': ['dm-ioctl.h'], 'quota.h': ['quota.h'], 'socket.h': ['socket.h'], 'psci.h': ['psci.h'], 'blktrace_api.h': ['blktrace_api.h'], 'gtp.h': ['gtp.h'], 'posix_types.h': ['posix_types.h'], 'atm_zatm.h': ['atm_zatm.h'], 'netconf.h': ['netconf.h'], 'atmioc.h': ['atmioc.h'], 'atm_idt77105.h': ['atm_idt77105.h'], 'if_hippi.h': ['if_hippi.h'], 'cfm_bridge.h': ['cfm_bridge.h'], 'kdev_t.h': ['kdev_t.h'], 'in6.h': ['input-event-codes.h', 'major.h', 'vbox_err.h', 'in6.h'], 'times.h': ['times.h'], 'const.h': ['const.h'], 'msg.h': ['msg.h'], 'if_bonding.h': ['if_bonding.h'], 'nfs_fs.h': ['nfs_fs.h'], 'kfd_ioctl.h': ['kfd_ioctl.h'], 'ppp-comp.h': ['ppp-comp.h'], 'coda.h': ['coda.h'], 'if_team.h': ['if_team.h'], 'kvm.h': ['kvm.h'], 'reboot.h': ['reboot.h'], 'adfs_fs.h': ['adfs_fs.h'], 'hid.h': ['hid.h'], 'hw_breakpoint.h': ['hw_breakpoint.h'], 'dm-log-userspace.h': ['dm-log-userspace.h'], 'vbox_vmmdev_types.h': ['vbox_vmmdev_types.h'], 'aio_abi.h': ['aio_abi.h'], 'mii.h': ['mii.h'], 'filter.h': ['filter.h'], 'libc-compat.h': ['libc-compat.h'], 'nfsacl.h': ['nfsacl.h'], 'mroute6.h': ['mroute6.h'], 'fsmap.h': ['fsmap.h'], 'un.h': ['un.h'], 'ife.h': ['ife.h'], 'magic.h': ['input-event-codes.h', 'vbox_err.h', 'magic.h'], 'mroute.h': ['mroute.h'], 'ppdev.h': ['ppdev.h'], 'if_tun.h': ['if_tun.h'], 'atm_he.h': ['atm_he.h'], 'nfs4.h': ['synclink.h', 'input-event-codes.h', 'major.h', 'vbox_err.h', 'pci_regs.h', 'nfs4.h'], 'meye.h': ['meye.h']}

* Anomaly Detection
Let's apply Isolation Forest and Local Outlier Factor to detect anomalies in our dataset of `.h` files.

** Isolation Forest
Applying Isolation Forest for anomaly detection.

#+BEGIN_SRC python :results output
from sklearn.ensemble import IsolationForest

# Fit the Isolation Forest model
iso_forest = IsolationForest(contamination=0.05)  # Specifying 10% contamination
predictions_iso = iso_forest.fit_predict(tfidf_matrix.toarray())

# Identify anomalies
anomalies_iso = np.where(predictions_iso == -1)[0]
h_filenames = np.array(list(h_files.keys()))
print(f"Anomalies detected using Isolation Forest: {anomalies_iso}")
print(f"Anomalies detected using Isolation Forest: {list(h_filenames[anomalies_iso])}")

#+END_SRC

#+RESULTS:
: Anomalies detected using Isolation Forest: [  5  12  30  62  63 129 145 148 150 153 168 193 225 268 297 303 317 332
:  340 341 395 402 427 449 471 480 514]
: Anomalies detected using Isolation Forest: ['if_link.h', 'videodev2.h', 'cec.h', 'fs.h', 'serial_reg.h', 'fuse.h', 'perf_event.h', 'snmp.h', 'vfio.h', 'nl80211.h', 'soundcard.h', 'input-event-codes.h', 'rkisp1-config.h', 'rtnetlink.h', 'openvswitch.h', 'pkt_sched.h', 'v4l2-controls.h', 'nfc.h', 'sysctl.h', 'pci_regs.h', 'nilfs2_ondisk.h', 'bpf.h', 'ethtool.h', 'fb.h', 'sctp.h', 'ethtool_netlink.h', 'kvm.h']

** Local Outlier Factor
Now, let's use Local Outlier Factor for anomaly detection.

#+BEGIN_SRC python :results output
from sklearn.neighbors import LocalOutlierFactor

# Fit the Local Outlier Factor model
lof = LocalOutlierFactor(n_neighbors=3)  # Higher neighbors less outliers?
predictions_iso = lof.fit_predict(tfidf_matrix.toarray())
print(predictions_iso)
anomalies_iso = np.where(predictions_iso == -1)[0]

h_filenames = np.array(list(h_files.keys()))
print(f"Anomalies detected using LocalOutlierFactor: {anomalies_iso}")
print(f"Anomalies detected using LocalOutlierFactor: {list(h_filenames[anomalies_iso])}")

#+END_SRC

#+RESULTS:
#+begin_example
[ 1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1
  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1
  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1
  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1 -1  1  1  1  1  1  1  1  1
  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1
  1  1  1  1  1  1  1 -1  1  1  1  1  1  1  1  1  1  1  1  1  1  1 -1  1
  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1
  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1
  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1
  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1
  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1
  1  1 -1  1  1  1  1 -1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1
  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1 -1
  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1
  1  1  1  1  1  1  1  1  1  1  1  1 -1  1  1  1  1  1  1  1  1  1  1  1
  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1 -1  1  1  1  1  1
  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1
  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1
  1  1 -1  1 -1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1
  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1
  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1 -1  1  1 -1  1  1  1  1  1
  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1
  1 -1  1  1  1  1  1  1  1]
Anomalies detected using LocalOutlierFactor: [ 87 127 142 266 271 311 348 378 434 436 495 498 529]
Anomalies detected using LocalOutlierFactor: ['if_phonet.h', 'fadvise.h', 'if_ltalk.h', 'module.h', 'ccs.h', 'virtio_scmi.h', 'v4l2-dv-timings.h', 'veth.h', 'seg6_genl.h', 'ipsec.h', 'gtp.h', 'netconf.h', 'ife.h']
#+end_example


In the notebook, we successfully:
1. Parsed `.h` files and created embeddings using TF-IDF.
2. Computed cosine similarity to identify similar files.
3. Applied Isolation Forest and Local Outlier Factor to detect anomalies in the dataset.

This exploration provides a foundation for understanding textual embeddings and anomaly detection methods in a practical context.



* FastEmbed

This tutorial demonstrates how to use the FastEmbed Python module to
compute embeddings of textual data and analyze their cosine
similarity.

** Step 1: Import and Initialize the Embedding Model


#+begin_src python :results output
from fastembed import TextEmbedding
embedding_model = TextEmbedding()
print(embedding_model.model_name)
#+end_src

#+RESULTS:
: BAAI/bge-small-en-v1.5

This will print the name of the model being used for embeddings.

#+BEGIN_SRC python :results output
embeddings = np.array(list(embedding_model.embed(h_files.values())))
# Compute cosine similarity
cosine_sim = cosine_similarity(embeddings)
print("Cosine similarity computed.")

#+END_SRC

#+RESULTS:
: Cosine similarity computed.

#+BEGIN_SRC python :results output
print(embedding_model.model_name)
#+END_SRC

#+RESULTS:
: BAAI/bge-small-en-v1.5

The BAAI/bge-small-en-v1.5 is an embedding model developed by the
Beijing Academy of Artificial Intelligence (BAAI). It is designed to
produce dense vector representations of text in English, facilitating
tasks like semantic search, clustering, and classification. This model
focuses on capturing the contextual meaning of words and phrases,
enabling effective downstream natural language processing
applications. Its smaller size allows for faster inference times while
retaining a balance between performance and resource efficiency.

BAAI https://www.aimodels.fyi/models/huggingFace/bge-small-en-baai 2024-05-28

This displays the dimensions of the embeddings and the cosine
similarity matrix, providing a clearer picture of what’s being
processed.

#+BEGIN_SRC python :results output
print(embeddings.shape)
print(cosine_sim.shape)
#+END_SRC

#+RESULTS:
: (537, 384)
: (537, 537)


This step allows you to examine the specific numeric values of an
embedding and compare it to another, enhancing your understanding of
how embeddings represent text semantically.


#+BEGIN_SRC python :results output
print(np.round(100*embeddings[0],decimals=2))
print(np.round(100*embeddings[0][0:30] - 100*embeddings[1][0:30],decimals=2))
#+END_SRC

#+RESULTS:
#+begin_example
[ -5.66  -1.71  -1.98  -5.57   4.91  -0.64  -5.04   1.68  -5.24  -1.46
  -0.06  -3.12   4.28  -4.66  -5.32  -0.63   2.84   2.41   4.01   2.51
   2.77  -3.89  -3.39  -4.9    2.44   4.72   2.88  -1.62  -0.57 -17.9
   2.06   8.13  -5.39  -0.74  -0.93  -2.37  -4.06   0.19   0.09   4.59
   0.88   7.36   0.32  -0.8    2.48  -4.86  -5.08  -1.35  -1.99  -0.77
  -1.83   5.8    1.98   5.2   -5.99   2.19   1.8    0.92  -3.61   0.25
   3.97   6.53 -11.72   8.09  -2.38   4.43   1.77  -5.88  -3.32   4.44
  -3.82   2.89   2.15   6.46   0.75  -4.14   0.66  -0.67   0.21   2.87
   0.87  -2.77  -5.93  -3.43  -3.34   1.27   0.87   4.09   3.12   4.65
  -4.73  -7.88  -2.59   1.48  -5.1    2.32   0.15   2.09  -1.81  37.06
  -3.22  -1.78  -7.67   2.58   9.67   1.96  -1.68   1.28  -5.01   0.52
  -1.73  -7.12  10.54  -5.19  -1.49  -6.51  -6.32   3.07   2.14   2.54
   1.22  -1.37   2.46   2.72   6.26   2.32  -2.76   4.72  -2.12   1.7
  -0.7    0.87  -0.3    3.98   8.22   2.44  -2.1    0.41   0.81   0.33
  -0.33  -0.53   2.6   -1.59  -3.13   5.96  -1.1   -2.66  -4.56   3.32
   5.33   5.72  -4.24  -2.63   0.43   2.14   6.64   1.9   -9.96   0.75
  -2.47  -4.4   -3.32  15.29  -3.5   -6.31  -3.55   1.53  -0.93  -0.12
  -6.51  -5.19   1.01  -6.4    0.16  -0.12   2.48   4.36   1.94  -3.75
   1.63  -0.26  -9.51  -6.5   -1.65  -0.45  -3.56   3.42  -0.25  -1.39
  -3.49   6.96   0.83   3.34   1.05   0.61  -7.58  -0.32   1.25 -10.55
  10.07   5.25  -1.75  -1.51  -2.7   -4.85   2.17  -2.73  -1.72  -0.15
  -3.3    2.44  -0.47   1.12  -5.26   3.59   2.29   3.94  -4.24   5.53
  -3.02  -3.07 -10.94 -30.88  -0.73  -3.45  -2.48   3.36  -2.25  -2.02
   4.56  -0.2    2.87  11.78   5.28  -2.99  -2.71  -4.48   3.98   4.42
  -5.68   0.28  -1.31  -0.25   1.56  -5.72   0.39   4.58   0.67   9.29
  -1.27   8.22   2.88   4.7    2.85  -0.35  -3.55   1.79   6.68   0.61
   7.7   -1.09   4.2   -4.76   1.05  -3.08  -9.31   5.54  -4.9   -2.83
   2.19  -2.28   2.39  -1.24   0.8    3.14   0.99   2.09  -3.04   0.37
  -3.48   0.1    3.12   4.33  -5.84   1.22  -0.97   1.77  -2.56  -3.83
   3.47   5.38  -3.94  -2.83   8.25   0.97  -0.3    1.62   0.36   1.08
  -0.6   -3.11  -5.79  -2.32   5.76   8.43  -3.48  -2.29  -1.83  -0.92
   6.72   3.08   3.47  -7.37   6.4   -5.34  -2.65   3.69  -2.1  -28.65
   1.64   7.38   1.87  -1.29  -1.1    3.14  -5.42  -2.55   0.76  -3.15
   9.5    8.92  -2.73  -5.25  -0.14   3.13   2.88   4.49   5.19  -2.02
   3.93  12.95  -4.14   4.23   1.37  -0.22   1.82   6.5    3.38  -0.48
  -0.48   2.83  -0.18  -0.39   2.94   0.22   0.3    6.06   1.91  -5.69
  -4.82  -7.27   0.24   3.14  -3.23   0.95  -5.85  -3.85   6.65   0.87
  -0.16  -4.5    1.9   -2.77  -0.89   2.87   2.97   2.44  -0.85   1.34
  -5.29   7.98   3.09   2.09]
[-0.84  1.01 -2.03  4.72  5.9   1.14  0.66 -0.76 -2.89 -0.71 -1.82  3.56
 -0.96  2.02 -0.66 -0.17 -1.09 -2.89 -2.73 -0.56 -3.15  0.76  3.02 -1.76
  1.89  0.75  1.02 -3.62  0.93 -0.39]
#+end_example


What does the cosine similarity look like? The output here will help
you assess the closeness of the first embedding to others using cosine
similarity, which ranges from -1 to 1, where values close to 1
indicate high similarity.

#+BEGIN_SRC python :results output
print(cosine_sim[0][0:10])
#+END_SRC

#+RESULTS:
: [1.0000001  0.8458821  0.80035365 0.8367754  0.8259349  0.82954013
:  0.8264361  0.8502727  0.83449095 0.79642415]

In this final step, we determine which files have embeddings that
exceed the specified similarity threshold. The results display pairs
of similar files, providing actionable insights into related content
based on their embeddings.

#+BEGIN_SRC python :results output
def find_similar_files(cosine_sim, filenames, threshold=0.5):
    similar_files = {}
    my_files = np.array(filenames)
    for i, filename in enumerate(filenames):
        similar_files[filename] = list(my_files[cosine_sim[i] >= threshold])
    return similar_files

similarity_threshold = 0.95  # threshold for similarity
similar_files = find_similar_files(cosine_sim, list(h_files.keys()), similarity_threshold)
print(f"Found similar files above the threshold of {similarity_threshold}.")
print(similar_files)
#+END_SRC

#+RESULTS:
: Found similar files above the threshold of 0.95.
: {'qnx4_fs.h': ['qnx4_fs.h', 'qnxtypes.h'], 'if_pppox.h': ['if_pppox.h', 'if_pppol2tp.h'], 'pkt_cls.h': ['pkt_cls.h'], 'iso_fs.h': ['iso_fs.h'], 'ivtvfb.h': ['ivtvfb.h'], 'if_link.h': ['if_link.h'], 'scif_ioctl.h': ['scif_ioctl.h'], 'kernel-page-flags.h': ['kernel-page-flags.h'], 'atm_nicstar.h': ['atm_nicstar.h'], 'mempolicy.h': ['mempolicy.h'], 'omap3isp.h': ['omap3isp.h'], 'netfilter_ipv6.h': ['netfilter_ipv6.h', 'netfilter_ipv4.h'], 'videodev2.h': ['videodev2.h', 'v4l2-controls.h'], 'dma-buf.h': ['dma-buf.h'], 'stm.h': ['stm.h'], 'tcp_metrics.h': ['tcp_metrics.h'], 'lirc.h': ['lirc.h'], 'rose.h': ['rose.h'], 'if_tunnel.h': ['if_tunnel.h', 'stat.h'], 'tipc_sockets_diag.h': ['tipc_sockets_diag.h'], 'binfmts.h': ['binfmts.h'], 'if_arcnet.h': ['if_arcnet.h'], 'xilinx-v4l2-controls.h': ['xilinx-v4l2-controls.h'], 'inotify.h': ['inotify.h'], 'connector.h': ['connector.h', 'bt-bmc.h', 'hyperv.h', 'nbd-netlink.h', 'btrfs.h', 'hid.h'], 'bpfilter.h': ['bpfilter.h'], 'net_namespace.h': ['net_namespace.h', 'bt-bmc.h'], 'virtio_vsock.h': ['virtio_vsock.h', 'virtio_console.h'], 'fdreg.h': ['fdreg.h'], 'hdlcdrv.h': ['hdlcdrv.h'], 'cec.h': ['cec.h'], 'landlock.h': ['landlock.h'], 'dns_resolver.h': ['dns_resolver.h'], 'nubus.h': ['nubus.h'], 'mpls.h': ['mpls.h'], 'cycx_cfm.h': ['cycx_cfm.h'], 'if_vlan.h': ['if_vlan.h'], 'eventpoll.h': ['eventpoll.h'], 'bpf_common.h': ['bpf_common.h', 'bpf.h'], 'kernel.h': ['kernel.h', 'unistd.h', 'auto_fs4.h', 'ioctl.h'], 'virtio_bt.h': ['virtio_bt.h'], 'pci.h': ['pci.h'], 'mmtimer.h': ['mmtimer.h'], 'if_arp.h': ['if_arp.h', 'sockios.h', 'netdevice.h', 'if.h', 'udp.h', 'route.h', 'if_ether.h', 'tcp.h', 'in.h'], 'udmabuf.h': ['udmabuf.h'], 'capability.h': ['capability.h'], 'seccomp.h': ['seccomp.h'], 'netfilter_bridge.h': ['netfilter_bridge.h'], 'ppp_defs.h': ['ppp_defs.h'], 'errno.h': ['errno.h'], 'sock_diag.h': ['sock_diag.h'], 'sockios.h': ['if_arp.h', 'sockios.h', 'if_fddi.h', 'netdevice.h', 'if.h', 'udp.h', 'if_fc.h', 'ip.h', 'route.h', 'if_ether.h', 'tcp.h', 'icmp.h', 'in.h'], 'wireless.h': ['wireless.h'], 'auto_dev-ioctl.h': ['auto_dev-ioctl.h'], 'ila.h': ['ila.h'], 'qemu_fw_cfg.h': ['qemu_fw_cfg.h'], 'ip6_tunnel.h': ['ip6_tunnel.h'], 'mount.h': ['mount.h'], 'phonet.h': ['phonet.h'], 'fscrypt.h': ['fscrypt.h'], 'nfs2.h': ['nfs2.h', 'nfs3.h', 'nfs.h', 'nfs4.h'], 'smc.h': ['smc.h'], 'fs.h': ['fs.h'], 'serial_reg.h': ['serial_reg.h'], 'coff.h': ['coff.h'], 'limits.h': ['limits.h'], 'close_range.h': ['close_range.h'], 'aufs_type.h': ['aufs_type.h'], 'prctl.h': ['prctl.h'], 'affs_hardblocks.h': ['affs_hardblocks.h'], 'memfd.h': ['memfd.h', 'mman.h'], 'i2c-dev.h': ['i2c-dev.h'], 'ipu-psys.h': ['ipu-psys.h'], 'mrp_bridge.h': ['mrp_bridge.h'], 'rio_cm_cdev.h': ['rio_cm_cdev.h', 'rio_mport_cdev.h'], 'poll.h': ['poll.h'], 'fou.h': ['fou.h'], 'ipmi_bmc.h': ['ipmi_bmc.h'], 'map_to_7segment.h': ['map_to_7segment.h'], 'tls.h': ['tls.h', 'rds.h', 'if_infiniband.h'], 'nsfs.h': ['nsfs.h'], 'kvm_para.h': ['kvm_para.h'], 'wwan.h': ['wwan.h'], 'fpga-dfl.h': ['fpga-dfl.h'], 'pps.h': ['pps.h'], 'wmi.h': ['wmi.h'], 'rds.h': ['tls.h', 'rds.h', 'if_infiniband.h'], 'if_phonet.h': ['if_phonet.h'], 'if_alg.h': ['if_alg.h'], 'uio.h': ['uio.h'], 'hsr_netlink.h': ['hsr_netlink.h'], 'gfs2_ondisk.h': ['gfs2_ondisk.h'], 'gsmmux.h': ['gsmmux.h'], 'string.h': ['string.h'], 'stat.h': ['if_tunnel.h', 'stat.h'], 'atm.h': ['atm.h'], 'synclink.h': ['synclink.h'], 'ip_vs.h': ['ip_vs.h'], 'sed-opal.h': ['sed-opal.h'], 'if_pppol2tp.h': ['if_pppox.h', 'if_pppol2tp.h'], 'timex.h': ['timex.h'], 'nvme_ioctl.h': ['nvme_ioctl.h'], 'bcm933xx_hcs.h': ['bcm933xx_hcs.h'], 'edd.h': ['edd.h'], 'remoteproc_cdev.h': ['remoteproc_cdev.h'], 'ipu-isys.h': ['ipu-isys.h'], 'hdlc.h': ['hdlc.h'], 'cn_proc.h': ['cn_proc.h'], 'param.h': ['param.h', 'termios.h'], 'kcm.h': ['kcm.h'], 'mdio.h': ['mdio.h'], 'ipc.h': ['ipc.h'], 'acct.h': ['acct.h'], 'nfs4_mount.h': ['nfs4_mount.h', 'nfs_mount.h'], 'net_tstamp.h': ['net_tstamp.h'], 'unistd.h': ['kernel.h', 'unistd.h', 'auto_fs4.h', 'ioctl.h'], 'fd.h': ['fd.h'], 'agpgart.h': ['agpgart.h'], 'if_fddi.h': ['sockios.h', 'if_fddi.h', 'netdevice.h', 'if.h', 'if_fc.h', 'route.h', 'if_ether.h', 'tcp.h'], 'ptrace.h': ['ptrace.h'], 'hiddev.h': ['hiddev.h', 'hid.h'], 'seg6_hmac.h': ['seg6_hmac.h'], 'suspend_ioctls.h': ['suspend_ioctls.h'], 'cxl_mem.h': ['cxl_mem.h'], 'fsverity.h': ['fsverity.h'], 'fcntl.h': ['fcntl.h'], 'ptp_clock.h': ['ptp_clock.h'], 'fadvise.h': ['fadvise.h'], 'gen_stats.h': ['gen_stats.h'], 'fuse.h': ['fuse.h'], 'i8k.h': ['i8k.h'], 'hdreg.h': ['hdreg.h'], 'elf-em.h': ['elf-em.h'], 'vm_sockets_diag.h': ['vm_sockets_diag.h'], 'unix_diag.h': ['unix_diag.h'], 'cciss_ioctl.h': ['cciss_ioctl.h'], 'bpqether.h': ['bpqether.h'], 'netdevice.h': ['if_arp.h', 'sockios.h', 'if_fddi.h', 'netdevice.h', 'if.h', 'udp.h', 'if_fc.h', 'ip.h', 'route.h', 'if_ether.h', 'tcp.h', 'icmp.h', 'in.h'], 'firewire-constants.h': ['firewire-constants.h'], 'netfilter_arp.h': ['netfilter_arp.h'], 'virtio_console.h': ['virtio_vsock.h', 'virtio_console.h', 'virtio_scsi.h', 'virtio_blk.h'], 'net.h': ['net.h'], 'if_ltalk.h': ['if_ltalk.h'], 'erspan.h': ['erspan.h'], 'mptcp.h': ['mptcp.h'], 'perf_event.h': ['perf_event.h'], 'nfs_mount.h': ['nfs4_mount.h', 'nfs_mount.h'], 'firewire-cdev.h': ['firewire-cdev.h'], 'snmp.h': ['snmp.h'], 'ipv6.h': ['ipv6.h'], 'vfio.h': ['vfio.h'], 'vtpm_proxy.h': ['vtpm_proxy.h'], 'rxrpc.h': ['rxrpc.h'], 'nl80211.h': ['nl80211.h'], 'cryptouser.h': ['cryptouser.h'], 'batadv_packet.h': ['batadv_packet.h'], 'dlm_plock.h': ['dlm_plock.h'], 'adb.h': ['adb.h'], 'if_infiniband.h': ['tls.h', 'rds.h', 'if_infiniband.h'], 'atmclip.h': ['atmclip.h'], 'rio_mport_cdev.h': ['rio_cm_cdev.h', 'rio_mport_cdev.h'], 'loop.h': ['loop.h'], 'virtio_pci.h': ['virtio_pci.h'], 'virtio_types.h': ['virtio_types.h', 'virtio_net.h', 'virtio_config.h', 'virtio_ids.h', 'virtio_input.h', 'virtio_blk.h'], 'tiocl.h': ['tiocl.h'], 'x25.h': ['x25.h', 'ax25.h'], 'uvcvideo.h': ['uvcvideo.h'], 'shm.h': ['shm.h'], 'soundcard.h': ['soundcard.h'], 'kcmp.h': ['kcmp.h'], 'sound.h': ['sound.h'], 'errqueue.h': ['errqueue.h'], 'virtio_pcidev.h': ['virtio_pcidev.h'], 'nexthop.h': ['nexthop.h'], 'virtio_net.h': ['virtio_types.h', 'virtio_net.h', 'virtio_9p.h', 'virtio_crypto.h', 'virtio_config.h', 'virtio_ids.h', 'virtio_input.h', 'virtio_blk.h'], 'rpmsg.h': ['rpmsg.h'], 'uuid.h': ['uuid.h'], 'resource.h': ['resource.h'], 'if_slip.h': ['if_slip.h'], 'seg6.h': ['seg6.h', 'rpl.h', 'seg6_iptunnel.h'], 'bsg.h': ['bsg.h'], 'ipmi.h': ['ipmi.h'], 'kernelcapi.h': ['kernelcapi.h'], 'kexec.h': ['kexec.h'], 'irqnr.h': ['irqnr.h'], 'v4l2-common.h': ['v4l2-common.h'], 'v4l2-mediabus.h': ['v4l2-mediabus.h', 'media-bus-format.h'], 'pg.h': ['pg.h'], 'virtio_9p.h': ['virtio_net.h', 'virtio_9p.h', 'virtio_config.h', 'virtio_ids.h', 'virtio_input.h', 'virtio_blk.h'], 'aspeed-lpc-ctrl.h': ['aspeed-lpc-ctrl.h'], 'io_uring.h': ['io_uring.h'], 'dma-heap.h': ['dma-heap.h'], 'phantom.h': ['phantom.h'], 'input-event-codes.h': ['input-event-codes.h'], 'if.h': ['if_arp.h', 'sockios.h', 'if_fddi.h', 'netdevice.h', 'if.h', 'udp.h', 'if_fc.h', 'route.h', 'if_ether.h', 'tcp.h', 'icmp.h', 'in.h'], 'ioam6_iptunnel.h': ['ioam6_iptunnel.h', 'ioam6.h'], 'vt.h': ['vt.h'], 'dlm_device.h': ['dlm_device.h', 'dlm.h', 'dlmconstants.h'], 'pr.h': ['pr.h'], 'if_ppp.h': ['if_ppp.h'], 'scc.h': ['scc.h'], 'f2fs.h': ['f2fs.h'], 'virtio_rng.h': ['virtio_rng.h'], 'virtio_mem.h': ['virtio_mem.h'], 'bfs_fs.h': ['bfs_fs.h'], 'membarrier.h': ['membarrier.h'], 'lp.h': ['lp.h'], 'atalk.h': ['atalk.h'], 'userfaultfd.h': ['userfaultfd.h'], 'omapfb.h': ['omapfb.h'], 'coresight-stm.h': ['coresight-stm.h'], 'dqblk_xfs.h': ['dqblk_xfs.h'], 'if_x25.h': ['if_x25.h'], 'virtio_fs.h': ['virtio_fs.h'], 'udp.h': ['if_arp.h', 'sockios.h', 'netdevice.h', 'if.h', 'udp.h', 'route.h', 'if_ether.h', 'tcp.h', 'icmp.h', 'in.h'], 'zorro.h': ['zorro.h'], 'fsl_hypervisor.h': ['fsl_hypervisor.h'], 'screen_info.h': ['screen_info.h'], 'acrn.h': ['acrn.h'], 'ppp-ioctl.h': ['ppp-ioctl.h'], 'fanotify.h': ['fanotify.h'], 'userio.h': ['userio.h'], 'virtio_crypto.h': ['virtio_net.h', 'virtio_crypto.h', 'virtio_ids.h'], 'if_fc.h': ['sockios.h', 'if_fddi.h', 'netdevice.h', 'if.h', 'if_fc.h', 'route.h', 'if_ether.h', 'tcp.h'], 'virtio_config.h': ['virtio_types.h', 'virtio_net.h', 'virtio_9p.h', 'virtio_config.h', 'virtio_ids.h', 'virtio_input.h', 'virtio_blk.h'], 'rkisp1-config.h': ['rkisp1-config.h'], 'posix_acl_xattr.h': ['posix_acl_xattr.h', 'posix_acl.h'], 'atmlec.h': ['atmlec.h'], 'can.h': ['can.h'], 'blkzoned.h': ['blkzoned.h'], 'cciss_defs.h': ['cciss_defs.h'], 'virtio_mmio.h': ['virtio_mmio.h'], 'termios.h': ['param.h', 'termios.h'], 'psp-sev.h': ['psp-sev.h'], 'romfs_fs.h': ['romfs_fs.h'], 'matroxfb.h': ['matroxfb.h'], 'types.h': ['types.h'], 'virtio_iommu.h': ['virtio_iommu.h'], 'mtio.h': ['mtio.h'], 'i2o-dev.h': ['i2o-dev.h'], 'rpl_iptunnel.h': ['rpl_iptunnel.h', 'rpl.h', 'seg6_iptunnel.h'], 'ip.h': ['sockios.h', 'netdevice.h', 'ip.h', 'tcp.h', 'in.h'], 'hpet.h': ['hpet.h'], 'dccp.h': ['dccp.h'], 'virtio_gpio.h': ['virtio_gpio.h'], 'hash_info.h': ['hash_info.h'], 'route.h': ['if_arp.h', 'sockios.h', 'if_fddi.h', 'netdevice.h', 'if.h', 'udp.h', 'if_fc.h', 'route.h', 'if_ether.h', 'tcp.h', 'icmp.h', 'in.h'], 'if_addr.h': ['if_addr.h'], 'fib_rules.h': ['fib_rules.h'], 'posix_acl.h': ['posix_acl_xattr.h', 'posix_acl.h'], 'baycom.h': ['baycom.h'], 'atm_tcp.h': ['atm_tcp.h'], 'reiserfs_fs.h': ['reiserfs_fs.h'], 'virtio_snd.h': ['virtio_snd.h'], 'bt-bmc.h': ['connector.h', 'net_namespace.h', 'bt-bmc.h', 'hyperv.h', 'nbd-netlink.h', 'btrfs.h', 'auto_fs4.h', 'hid.h'], 'if_ether.h': ['if_arp.h', 'sockios.h', 'if_fddi.h', 'netdevice.h', 'if.h', 'udp.h', 'if_fc.h', 'route.h', 'if_ether.h', 'tcp.h', 'icmp.h', 'in.h'], 'hyperv.h': ['connector.h', 'bt-bmc.h', 'hyperv.h', 'nbd-netlink.h', 'btrfs.h', 'uinput.h', 'hid.h'], 'btrfs_tree.h': ['btrfs_tree.h'], 'toshiba.h': ['toshiba.h'], 'dlm.h': ['dlm_device.h', 'dlm.h', 'dlmconstants.h'], 'l2tp.h': ['l2tp.h'], 'igmp.h': ['igmp.h'], 'major.h': ['major.h'], 'cgroupstats.h': ['cgroupstats.h'], 'usbip.h': ['usbip.h'], 'cramfs_fs.h': ['cramfs_fs.h'], 'module.h': ['module.h'], 'futex.h': ['futex.h'], 'rtnetlink.h': ['rtnetlink.h'], 'vhost.h': ['vhost.h', 'vhost_types.h'], 'cm4000_cs.h': ['cm4000_cs.h'], 'ccs.h': ['ccs.h'], 'openat2.h': ['openat2.h'], 'ioam6.h': ['ioam6_iptunnel.h', 'ioam6.h', 'ioam6_genl.h'], 'sonypi.h': ['sonypi.h'], 'oom.h': ['oom.h'], 'virtio_gpu.h': ['virtio_gpu.h'], 'serial.h': ['serial.h'], 'tcp.h': ['if_arp.h', 'sockios.h', 'if_fddi.h', 'netdevice.h', 'if.h', 'udp.h', 'if_fc.h', 'ip.h', 'route.h', 'if_ether.h', 'tcp.h', 'icmp.h', 'in.h'], 'if_eql.h': ['if_eql.h'], 'ipmi_msgdefs.h': ['ipmi_msgdefs.h'], 'nbd-netlink.h': ['connector.h', 'bt-bmc.h', 'hyperv.h', 'nbd-netlink.h', 'btrfs.h', 'usbdevice_fs.h', 'uinput.h', 'hid.h'], 'ndctl.h': ['ndctl.h'], 'tty_flags.h': ['tty_flags.h'], 'iommu.h': ['iommu.h'], 'btrfs.h': ['connector.h', 'bt-bmc.h', 'hyperv.h', 'nbd-netlink.h', 'btrfs.h', 'uinput.h', 'hid.h'], 'i2c.h': ['i2c.h'], 'ipv6_route.h': ['ipv6_route.h', 'in_route.h'], 'rpl.h': ['seg6.h', 'rpl_iptunnel.h', 'rpl.h'], 'wait.h': ['wait.h'], 'nbd.h': ['nbd.h'], 'vbox_err.h': ['vbox_err.h'], 'atmmpc.h': ['atmmpc.h'], 'nfs_idmap.h': ['nfs_idmap.h'], 'btf.h': ['btf.h'], 'random.h': ['random.h'], 'thermal.h': ['thermal.h'], 'openvswitch.h': ['openvswitch.h'], 'audit.h': ['audit.h'], 'netfilter.h': ['netfilter.h'], 'v4l2-subdev.h': ['v4l2-subdev.h', 'media.h'], 'arm_sdei.h': ['arm_sdei.h'], 'nilfs2_api.h': ['nilfs2_api.h'], 'pkt_sched.h': ['pkt_sched.h'], 'auto_fs4.h': ['kernel.h', 'unistd.h', 'bt-bmc.h', 'auto_fs4.h'], 'media-bus-format.h': ['v4l2-mediabus.h', 'media-bus-format.h'], 'mpls_iptunnel.h': ['mpls_iptunnel.h'], 'rfkill.h': ['rfkill.h'], 'llc.h': ['llc.h'], 'netlink.h': ['netlink.h'], 'seg6_local.h': ['seg6_local.h'], 'virtio_scmi.h': ['virtio_scmi.h'], 'atm_eni.h': ['atm_eni.h'], 'parport.h': ['parport.h'], 'taskstats.h': ['taskstats.h'], 'gameport.h': ['gameport.h'], 'cyclades.h': ['cyclades.h'], 'v4l2-controls.h': ['videodev2.h', 'v4l2-controls.h'], 'signal.h': ['signal.h'], 'isst_if.h': ['isst_if.h'], 'ioam6_genl.h': ['ioam6.h', 'ioam6_genl.h'], 'pidfd.h': ['pidfd.h'], 'vdpa.h': ['vdpa.h'], 'switchtec_ioctl.h': ['switchtec_ioctl.h'], 'max2175.h': ['max2175.h'], 'atmarp.h': ['atmarp.h'], 'apm_bios.h': ['apm_bios.h'], 'smc_diag.h': ['smc_diag.h', 'inet_diag.h'], 'atmapi.h': ['atmapi.h'], 'falloc.h': ['falloc.h'], 'selinux_netlink.h': ['selinux_netlink.h'], 'xdp_diag.h': ['xdp_diag.h'], 'nfc.h': ['nfc.h'], 'pcitest.h': ['pcitest.h'], 'virtio_ring.h': ['virtio_ring.h'], 'um_timetravel.h': ['um_timetravel.h'], 'qnxtypes.h': ['qnx4_fs.h', 'qnxtypes.h'], 'nvram.h': ['nvram.h'], 'xattr.h': ['xattr.h'], 'vduse.h': ['vduse.h'], 'sysctl.h': ['sysctl.h'], 'pci_regs.h': ['pci_regs.h'], 'qrtr.h': ['qrtr.h'], 'icmpv6.h': ['icmpv6.h'], 'personality.h': ['personality.h'], 'smiapp.h': ['smiapp.h'], 'genetlink.h': ['genetlink.h'], 'pktcdvd.h': ['pktcdvd.h'], 'v4l2-dv-timings.h': ['v4l2-dv-timings.h'], 'reiserfs_xattr.h': ['reiserfs_xattr.h'], 'zorro_ids.h': ['zorro_ids.h'], 'xfrm.h': ['xfrm.h'], 'atmdev.h': ['atmdev.h'], 'efs_fs_sb.h': ['efs_fs_sb.h'], 'utime.h': ['utime.h'], 'icmp.h': ['sockios.h', 'netdevice.h', 'if.h', 'udp.h', 'route.h', 'if_ether.h', 'tcp.h', 'icmp.h', 'in.h'], 'gpio.h': ['gpio.h'], 'net_dropmon.h': ['net_dropmon.h'], 'ultrasound.h': ['ultrasound.h'], 'if_xdp.h': ['if_xdp.h'], 'elf-fdpic.h': ['elf-fdpic.h'], 'a.out.h': ['a.out.h'], 'target_core_user.h': ['target_core_user.h'], 'rtc.h': ['rtc.h'], 'sysinfo.h': ['sysinfo.h'], 'in.h': ['if_arp.h', 'sockios.h', 'netdevice.h', 'if.h', 'udp.h', 'ip.h', 'route.h', 'if_ether.h', 'tcp.h', 'icmp.h', 'in.h'], 'in_route.h': ['ipv6_route.h', 'in_route.h'], 'if_macsec.h': ['if_macsec.h'], 'seg6_iptunnel.h': ['seg6.h', 'rpl_iptunnel.h', 'seg6_iptunnel.h'], 'usbdevice_fs.h': ['nbd-netlink.h', 'usbdevice_fs.h'], 'ncsi.h': ['ncsi.h'], 'hidraw.h': ['hidraw.h'], 'lwtunnel.h': ['lwtunnel.h'], 'nfs3.h': ['nfs2.h', 'nfs3.h', 'nfs.h', 'nfs4.h'], 'cdrom.h': ['cdrom.h'], 'nfs.h': ['nfs2.h', 'nfs3.h', 'nfs.h'], 'mman.h': ['memfd.h', 'mman.h'], 'vm_sockets.h': ['vm_sockets.h'], 'veth.h': ['veth.h'], 'virtio_ids.h': ['virtio_types.h', 'virtio_net.h', 'virtio_9p.h', 'virtio_crypto.h', 'virtio_config.h', 'virtio_ids.h', 'virtio_balloon.h', 'virtio_input.h', 'virtio_blk.h'], 'fsl_mc.h': ['fsl_mc.h'], 'vboxguest.h': ['vboxguest.h'], 'mei.h': ['mei.h'], 'wireguard.h': ['wireguard.h'], 'nl80211-vnd-intel.h': ['nl80211-vnd-intel.h'], 'uhid.h': ['uhid.h'], 'dcbnl.h': ['dcbnl.h'], 'virtio_balloon.h': ['virtio_ids.h', 'virtio_balloon.h'], 'fiemap.h': ['fiemap.h'], 'chio.h': ['chio.h'], 'netfilter_ipv4.h': ['netfilter_ipv6.h', 'netfilter_ipv4.h'], 'blkpg.h': ['blkpg.h'], 'pfkeyv2.h': ['pfkeyv2.h'], 'mqueue.h': ['mqueue.h'], 'sem.h': ['sem.h'], 'nilfs2_ondisk.h': ['nilfs2_ondisk.h'], 'vfio_ccw.h': ['vfio_ccw.h'], 'watch_queue.h': ['watch_queue.h'], 'auxvec.h': ['auxvec.h'], 'psample.h': ['psample.h'], 'devlink.h': ['devlink.h'], 'virtio_scsi.h': ['virtio_console.h', 'virtio_scsi.h'], 'bpf.h': ['bpf_common.h', 'bpf.h'], 'atmsvc.h': ['atmsvc.h'], 'if_cablemodem.h': ['if_cablemodem.h'], 'if_addrlabel.h': ['if_addrlabel.h'], 'virtio_pmem.h': ['virtio_pmem.h'], 'vfio_zdev.h': ['vfio_zdev.h'], 'utsname.h': ['utsname.h'], 'capi.h': ['capi.h'], 'serial_core.h': ['serial_core.h'], 'cec-funcs.h': ['cec-funcs.h'], 'input.h': ['input.h'], 'tty.h': ['tty.h'], 'sonet.h': ['sonet.h'], 'tee.h': ['tee.h'], 'vmcore.h': ['vmcore.h'], 'uleds.h': ['uleds.h'], 'batman_adv.h': ['batman_adv.h'], 'virtio_input.h': ['virtio_types.h', 'virtio_net.h', 'virtio_9p.h', 'virtio_config.h', 'virtio_ids.h', 'virtio_input.h', 'virtio_blk.h'], 'dlmconstants.h': ['dlm_device.h', 'dlm.h', 'dlmconstants.h'], 'mctp.h': ['mctp.h'], 'signalfd.h': ['signalfd.h'], 'arcfb.h': ['arcfb.h'], 'netrom.h': ['netrom.h', 'ax25.h'], 'keyboard.h': ['keyboard.h'], 'netlink_diag.h': ['netlink_diag.h'], 'ethtool.h': ['ethtool.h'], 'vhost_types.h': ['vhost.h', 'vhost_types.h'], 'uinput.h': ['hyperv.h', 'nbd-netlink.h', 'btrfs.h', 'uinput.h', 'hid.h'], 'serio.h': ['serio.h'], 'ioprio.h': ['ioprio.h'], 'packet_diag.h': ['packet_diag.h', 'if_packet.h'], 'cuda.h': ['cuda.h'], 'seg6_genl.h': ['seg6_genl.h'], 'swab.h': ['swab.h'], 'ipsec.h': ['ipsec.h'], 'timerfd.h': ['timerfd.h'], 'neighbour.h': ['neighbour.h'], 'watchdog.h': ['watchdog.h'], 'atmbr2684.h': ['atmbr2684.h'], 'time.h': ['time.h'], 'ax25.h': ['x25.h', 'netrom.h', 'ax25.h'], 'bcache.h': ['bcache.h'], 'radeonfb.h': ['radeonfb.h'], 'vsockmon.h': ['vsockmon.h'], 'udf_fs_i.h': ['udf_fs_i.h'], 'sched.h': ['sched.h'], 'jffs2.h': ['jffs2.h'], 'fb.h': ['fb.h'], 'dlm_netlink.h': ['dlm_netlink.h'], 'rpmsg_types.h': ['rpmsg_types.h'], 'am437x-vpfe.h': ['am437x-vpfe.h'], 'sync_file.h': ['sync_file.h'], 'if_bridge.h': ['if_bridge.h'], 'securebits.h': ['securebits.h'], 'elf.h': ['elf.h'], 'kcov.h': ['kcov.h'], 'tipc_config.h': ['tipc_config.h', 'tipc_netlink.h', 'tipc.h'], 'media.h': ['v4l2-subdev.h', 'media.h'], 'ivtv.h': ['ivtv.h'], 'patchkey.h': ['patchkey.h'], 'atmsap.h': ['atmsap.h'], 'tipc_netlink.h': ['tipc_config.h', 'tipc_netlink.h'], 'version.h': ['version.h'], 'bpf_perf_event.h': ['bpf_perf_event.h'], 'ioctl.h': ['kernel.h', 'unistd.h', 'ioctl.h'], 'atmppp.h': ['atmppp.h'], 'joystick.h': ['joystick.h'], 'msdos_fs.h': ['msdos_fs.h'], 'idxd.h': ['idxd.h'], 'sctp.h': ['sctp.h'], 'keyctl.h': ['keyctl.h'], 'tipc.h': ['tipc_config.h', 'tipc.h'], 'rseq.h': ['rseq.h'], 'virtio_blk.h': ['virtio_console.h', 'virtio_types.h', 'virtio_net.h', 'virtio_9p.h', 'virtio_config.h', 'virtio_ids.h', 'virtio_input.h', 'virtio_blk.h'], 'aspeed-p2a-ctrl.h': ['aspeed-p2a-ctrl.h'], 'nitro_enclaves.h': ['nitro_enclaves.h'], 'stddef.h': ['stddef.h'], 'if_plip.h': ['if_plip.h'], 'ethtool_netlink.h': ['ethtool_netlink.h'], 'if_packet.h': ['packet_diag.h', 'if_packet.h'], 'pmu.h': ['pmu.h'], 'minix_fs.h': ['minix_fs.h'], 'fsi.h': ['fsi.h'], 'virtio_i2c.h': ['virtio_i2c.h'], 'kd.h': ['kd.h'], 'time_types.h': ['time_types.h'], 'auto_fs.h': ['auto_fs.h'], 'inet_diag.h': ['smc_diag.h', 'inet_diag.h'], 'dm-ioctl.h': ['dm-ioctl.h'], 'quota.h': ['quota.h'], 'socket.h': ['socket.h'], 'psci.h': ['psci.h'], 'blktrace_api.h': ['blktrace_api.h'], 'gtp.h': ['gtp.h'], 'posix_types.h': ['posix_types.h'], 'atm_zatm.h': ['atm_zatm.h'], 'netconf.h': ['netconf.h'], 'atmioc.h': ['atmioc.h'], 'atm_idt77105.h': ['atm_idt77105.h'], 'if_hippi.h': ['if_hippi.h'], 'cfm_bridge.h': ['cfm_bridge.h'], 'kdev_t.h': ['kdev_t.h'], 'in6.h': ['in6.h'], 'times.h': ['times.h'], 'const.h': ['const.h'], 'msg.h': ['msg.h'], 'if_bonding.h': ['if_bonding.h'], 'nfs_fs.h': ['nfs_fs.h'], 'kfd_ioctl.h': ['kfd_ioctl.h'], 'ppp-comp.h': ['ppp-comp.h'], 'coda.h': ['coda.h'], 'if_team.h': ['if_team.h'], 'kvm.h': ['kvm.h'], 'reboot.h': ['reboot.h'], 'adfs_fs.h': ['adfs_fs.h'], 'hid.h': ['connector.h', 'hiddev.h', 'bt-bmc.h', 'hyperv.h', 'nbd-netlink.h', 'btrfs.h', 'uinput.h', 'hid.h'], 'hw_breakpoint.h': ['hw_breakpoint.h'], 'dm-log-userspace.h': ['dm-log-userspace.h'], 'vbox_vmmdev_types.h': ['vbox_vmmdev_types.h'], 'aio_abi.h': ['aio_abi.h'], 'mii.h': ['mii.h'], 'filter.h': ['filter.h'], 'libc-compat.h': ['libc-compat.h'], 'nfsacl.h': ['nfsacl.h'], 'mroute6.h': ['mroute6.h', 'mroute.h'], 'fsmap.h': ['fsmap.h'], 'un.h': ['un.h'], 'ife.h': ['ife.h'], 'magic.h': ['magic.h'], 'mroute.h': ['mroute6.h', 'mroute.h'], 'ppdev.h': ['ppdev.h'], 'if_tun.h': ['if_tun.h'], 'atm_he.h': ['atm_he.h'], 'nfs4.h': ['nfs2.h', 'nfs3.h', 'nfs4.h'], 'meye.h': ['meye.h']}

The quality looks pretty good though.

Let's see what isolation forest has to say

#+BEGIN_SRC python :results output
from sklearn.ensemble import IsolationForest

# Fit the Isolation Forest model
iso_forest = IsolationForest(contamination=0.05)  # Specifying 10% contamination
predictions_iso = iso_forest.fit_predict(embeddings)

# Identify anomalies
anomalies_iso = np.where(predictions_iso == -1)[0]
h_filenames = np.array(list(h_files.keys()))
print(f"Anomalies detected using Isolation Forest: {anomalies_iso}")
print(f"Anomalies detected using Isolation Forest: {list(h_filenames[anomalies_iso])}")

#+END_SRC

#+RESULTS:
: Anomalies detected using Isolation Forest: [ 49  75 100 117 138 162 163 168 184 199 202 222 231 293 307 310 313 329
:  332 370 379 415 448 491 510 512 521]
: Anomalies detected using Isolation Forest: ['errno.h', 'poll.h', 'timex.h', 'agpgart.h', 'firewire-constants.h', 'virtio_pci.h', 'virtio_types.h', 'soundcard.h', 'irqnr.h', 'if_ppp.h', 'virtio_rng.h', 'virtio_crypto.h', 'virtio_mmio.h', 'nfs_idmap.h', 'rfkill.h', 'seg6_local.h', 'parport.h', 'falloc.h', 'nfc.h', 'ncsi.h', 'virtio_ids.h', 'tee.h', 'jffs2.h', 'quota.h', 'kfd_ioctl.h', 'coda.h', 'aio_abi.h']


And local outlier factor:

#+BEGIN_SRC python :results output
from sklearn.neighbors import LocalOutlierFactor

# Fit the Local Outlier Factor model
lof = LocalOutlierFactor(n_neighbors=3)  # Higher neighbors less outliers?
predictions_iso = lof.fit_predict(embeddings)
print(predictions_iso)
anomalies_iso = np.where(predictions_iso == -1)[0]

h_filenames = np.array(list(h_files.keys()))
print(f"Anomalies detected using LocalOutlierFactor: {anomalies_iso}")
print(f"Anomalies detected using LocalOutlierFactor: {list(h_filenames[anomalies_iso])}")

#+END_SRC

#+RESULTS:
#+begin_example
[ 1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1
  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1
  1  1  1  1  1  1  1  1  1 -1  1  1  1  1  1  1  1  1  1  1  1  1  1  1
  1  1  1  1  1  1  1  1  1  1 -1  1  1  1  1  1  1  1 -1  1  1  1  1  1
  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1 -1  1  1
  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1 -1  1  1  1  1  1
  1  1  1 -1  1  1  1 -1 -1 -1  1  1  1 -1  1  1  1  1  1  1  1  1  1  1
 -1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1 -1  1  1  1  1  1  1  1
  1  1  1  1  1  1  1 -1  1  1 -1  1  1 -1  1  1  1  1  1  1  1  1  1  1
  1  1  1  1  1  1  1  1  1 -1  1  1  1 -1  1  1  1  1  1  1  1  1  1  1
  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1
 -1  1  1  1  1  1  1  1  1  1  1  1  1  1  1 -1  1  1 -1  1  1  1  1  1
  1 -1  1  1  1 -1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1 -1  1
  1 -1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1 -1  1
  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1
  1  1  1  1  1  1  1  1  1  1  1  1  1  1 -1  1  1  1  1  1  1  1  1 -1
  1  1  1  1  1 -1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1
  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1
  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1 -1  1  1  1  1 -1  1  1
  1  1  1  1  1  1  1  1 -1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1
  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1
  1  1  1  1  1  1 -1  1  1  1  1  1  1  1  1  1  1 -1  1  1  1  1  1  1
  1  1  1  1  1  1  1  1  1]
Anomalies detected using LocalOutlierFactor: [ 57  82  90 117 138 147 151 152 153 157 168 184 199 202 205 225 229 264
 279 282 289 293 310 313 334 374 383 389 448 453 464 510 521]
Anomalies detected using LocalOutlierFactor: ['mount.h', 'wwan.h', 'hsr_netlink.h', 'agpgart.h', 'firewire-constants.h', 'firewire-cdev.h', 'vtpm_proxy.h', 'rxrpc.h', 'nl80211.h', 'adb.h', 'soundcard.h', 'irqnr.h', 'if_ppp.h', 'virtio_rng.h', 'membarrier.h', 'rkisp1-config.h', 'blkzoned.h', 'usbip.h', 'if_eql.h', 'ndctl.h', 'wait.h', 'nfs_idmap.h', 'seg6_local.h', 'parport.h', 'virtio_ring.h', 'cdrom.h', 'wireguard.h', 'chio.h', 'jffs2.h', 'sync_file.h', 'version.h', 'kfd_ioctl.h', 'aio_abi.h']
#+end_example
